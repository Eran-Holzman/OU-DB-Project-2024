# new version, including uplaod a .txt file
import streamlit as st
from collections import defaultdict
import re  # Add this line

st.title('Eran & Omri News Article Summarizer')

uploaded_file = st.file_uploader("Choose a .txt file", type="txt")


def parse_text(texti):
    word_positions_dict = defaultdict(list)
    paragraphs = re.split('\n\n|\r\n\r\n', texti)  # Split text into paragraphs

    # Extract the title, authors, and date from the first paragraph
    first_paragraph_lines = paragraphs[0].split('\n')
    title = first_paragraph_lines[0]
    authors = first_paragraph_lines[1]
    date = first_paragraph_lines[2]
    st.text('Title: ' + title)
    st.text('Authors: ' + authors)
    st.text('Date: ' + date)

    # Start counting paragraphs from the second paragraph
    for p_index, paragraph in enumerate(paragraphs[1:], start=1):
        lines = paragraph.split('\n')  # Split paragraph into lines

        for l_index, line in enumerate(lines, start=1):
            # Split line into words and punctuation using regex
            words = re.findall(r'\b\w+\b|“|”', line)

            current_position = 0  # Initialize the current position in the line
            for w_index, word in enumerate(words, start=1):
                # Find the current occurrence of the word in the line
                word_start_index = line.find(word, current_position)
                word_end_index = word_start_index + len(word)
                current_position = word_end_index  # Update the current position

                # Find the character that comes after the word in the line
                if word_end_index < len(line):
                    next_char = line[word_end_index]
                else:
                    next_char = ' '  # Default to a space if the word is at the end of the line

                word_positions_dict[word].append((p_index, l_index, w_index, next_char))

    word_positions = [[word, positions] for word, positions in word_positions_dict.items()]
    return word_positions


if uploaded_file is not None:
    try:
        article_text = uploaded_file.read().decode('utf-8')

        word_positions = parse_text(article_text)
        for word, positions in word_positions:
            st.text(f'Word: "{word}", Positions: {positions}')

    except Exception as e:
        st.error('Sorry, something went wrong')
        st.error(str(e))
